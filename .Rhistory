head()
my.db %>%
tbl("beau_zscores_24h") %>%
select(gene_name_NCBI = ID,
GammaP) %>%
collect() %>%
mutate(my_col_name = GammaP*2) %>%
mutate(rhythmic_24h = ifelse(GammaP < 0.05, "yes", "no")) %>%
group_by(rhythmic_24h) %>%
summarise(n_genes = count())
my.db %>%
tbl("beau_zscores_24h") %>%
select(gene_name_NCBI = ID,
GammaP) %>%
collect() %>%
mutate(my_col_name = GammaP*2) %>%
mutate(rhythmic_24h = ifelse(GammaP < 0.05, "yes", "no")) %>%
group_by(rhythmic_24h) %>%
summarise(n_genes = n())
my.db %>%
tbl("beau_zscores_24h") %>%
select(gene_name_NCBI = ID,
GammaP) %>%
collect() %>%
mutate(my_col_name = GammaP*2) %>%
mutate(rhythmic_24h = ifelse(GammaP < 0.05, "yes", "no")) #%>%
my.db %>%
tbl("beau_zscores_24h") %>%
select(gene_name_NCBI = ID,
GammaP) %>%
collect() %>%
# mutate(my_col_name = GammaP*2) %>%
mutate(rhythmic_24h = ifelse(GammaP < 0.05, "yes", "no")) %>%
head()
my.db %>%
tbl("beau_zscores_24h") %>%
select(gene_name_NCBI = ID,
GammaP) %>%
collect() %>%
# mutate(my_col_name = GammaP*2) %>%
mutate(rhythmic_24h = ifelse(GammaP < 0.05, "yes", "no")) %>%
select(-GammaP) %>%
head()
# group_by(rhythmic_24h) %>%
#
# summarise(n_genes = n())
#
### Write table with all the gene ID's in it and say if it is rhytmic or not
period <- '24'
# path to file with all the gene IDs
csv.name <- paste0('./data/input/', species, '/', species, '_gene_names_robin_ncbi.csv')
#
# Choose species
species <- 'beau'
# Load library glue for naming purposes
library(glue)
# group_by(rhythmic_24h) %>%
#
# summarise(n_genes = n())
#
### Write table with all the gene ID's in it and say if it is rhytmic or not
period <- '24'
# path to file with all the gene IDs
csv.name <- paste0('./data/input/', species, '/', species, '_gene_names_robin_ncbi.csv')
# name of the new table in the database
name <- glue('{species}_rhytmic_genes_{period}h')
# read in the gene IDs
gene.IDs <- read.csv(csv.name, sep= ',', header = TRUE, stringsAsFactors = FALSE)
gene.IDs %>% head()
?left_join
my.db %>%
tbl(glue("beau_zscores_{period}h")) %>%
select(gene_name_NCBI = ID,
GammaP) %>%
collect() %>%
# mutate(my_col_name = GammaP*2) %>%
mutate(rhythmic_24h = ifelse(GammaP < 0.05, "yes", "no")) %>%
select(-GammaP) %>%
head()
my.db %>%
tbl(glue("beau_zscores_{period}h")) %>%
select(gene_ID_NCBI = ID,
GammaP) %>%
collect() %>%
# mutate(my_col_name = GammaP*2) %>%
mutate(rhythmic_24h = ifelse(GammaP < 0.05, "yes", "no")) %>%
select(-GammaP) %>%
head()
my.db %>%
tbl(glue("beau_zscores_{period}h")) %>%
select(gene_ID_NCBI = ID,
GammaP) %>%
collect() %>%
# mutate(my_col_name = GammaP*2) %>% you can do cool stuff with mutate
mutate(rhythmic_24h = ifelse(GammaP < 0.05, "yes", "no")) %>%
select(-GammaP) %>%
left_join(gene.IDs, by='gene_ID_NCBI')
my.db %>%
tbl(glue("beau_zscores_{period}h")) %>%
select(gene_ID_NCBI = ID,
GammaP) %>%
collect() %>%
# mutate(my_col_name = GammaP*2) %>% you can do cool stuff with mutate
mutate(rhythmic_24h = ifelse(GammaP < 0.05, "yes", "no")) %>%
select(-GammaP) %>%
left_join(gene.IDs, by='attributes_ncbi')
rhytmic <- my.db %>%
tbl(glue("beau_zscores_{period}h")) %>%
select(gene_ID_NCBI = ID,
GammaP) %>%
collect() %>%
# mutate(my_col_name = GammaP*2) %>% you can do cool stuff with mutate
mutate(rhythmic_24h = ifelse(GammaP < 0.05, "yes", "no")) %>%
select(-GammaP) %>%
head()
rhytmic <- my.db %>%
tbl(glue("beau_zscores_{period}h")) %>%
select(gene_ID_NCBI = ID,
GammaP) %>%
collect() %>%
# mutate(my_col_name = GammaP*2) %>% you can do cool stuff with mutate
mutate(rhythmic_24h = ifelse(GammaP < 0.05, "yes", "no")) %>%
select(-GammaP)
left_join(rhytmic, gene.IDs, by= 'gene_ID_NCBI')
left_join(rhytmic, gene.IDs, by= c('gene_ID_NCBI'='attributes_robin'))
left_join(rhytmic, gene.IDs, by= c('attributes_robin'='gene_ID_NCBI'))
left_join(rhytmic, gene.IDs)
left_join(rhytmic, gene.IDs, by = c('gene_ID_NCBI' = "attributes_ncbi"))
# rhytmic <-
my.db %>%
tbl(glue("beau_zscores_{period}h")) %>%
select(gene_ID_NCBI = ID,
GammaP) %>%
collect() %>%
# mutate(my_col_name = GammaP*2) %>% you can do cool stuff with mutate
mutate(rhythmic_24h = ifelse(GammaP < 0.05, "yes", "no")) %>%
select(-GammaP) %>%
left_join(gene.IDs, by = c('gene_ID_NCBI' = "attributes_ncbi")) %>%
head
# rhytmic <-
my.db %>%
tbl(glue("beau_zscores_{period}h")) %>%
select(gene_ID_NCBI = ID,
GammaP) %>%
collect() %>%
# mutate(my_col_name = GammaP*2) %>% you can do cool stuff with mutate
mutate(rhythmic_24h = ifelse(GammaP < 0.05, "yes", "no")) %>%
select(-GammaP) %>%
left_join(gene.IDs, by = c('gene_ID_NCBI' = "attributes_ncbi")) %>%
select(-c(start,end)) %>%
head
# rhytmic <-
my.db %>%
tbl(glue("{species}_zscores_{period}h")) %>%
select(gene_ID_NCBI = ID,
GammaP) %>%
collect() %>%
# mutate(my_col_name = GammaP*2) %>% you can do cool stuff with mutate
mutate(glue(rhythmic_{period}h) = ifelse(GammaP < 0.05, "yes", "no")) %>%
select(-GammaP) %>%
left_join(gene.IDs, by = c('gene_ID_NCBI' = "attributes_ncbi")) %>%
select(-c(start,end)) %>%
head
# rhytmic <-
my.db %>%
tbl(glue("{species}_zscores_{period}h")) %>%
select(gene_ID_NCBI = ID,
GammaP) %>%
collect() %>%
# mutate(my_col_name = GammaP*2) %>% you can do cool stuff with mutate
mutate(glue('rhythmic_{period}h') = ifelse(GammaP < 0.05, "yes", "no")) %>%
select(-GammaP) %>%
left_join(gene.IDs, by = c('gene_ID_NCBI' = "attributes_ncbi")) %>%
select(-c(start,end)) %>%
head
# rhytmic <-
my.db %>%
tbl(glue("{species}_zscores_{period}h")) %>%
select(gene_ID_NCBI = ID,
GammaP) %>%
collect() %>%
# mutate(my_col_name = GammaP*2) %>% you can do cool stuff with mutate
mutate(glue('rhythmic_{period}h') = ifelse(GammaP < 0.05, "yes", "no")) %>%
select(-GammaP) %>%
left_join(gene.IDs, by = c('gene_ID_NCBI' = "attributes_ncbi")) %>%
select(-c(start,end)) %>%
head
# rhytmic <-
my.db %>%
tbl(glue("{species}_zscores_{period}h")) %>%
select(gene_ID_NCBI = ID,
GammaP) %>%
collect() %>%
# mutate(my_col_name = GammaP*2) %>% you can do cool stuff with mutate
mutate(rhythmic_24h) = ifelse(GammaP < 0.05, "yes", "no")) %>%
select(-GammaP) %>%
left_join(gene.IDs, by = c('gene_ID_NCBI' = "attributes_ncbi")) %>%
select(-c(start,end)) %>%
head
# rhytmic <-
my.db %>%
tbl(glue("{species}_zscores_{period}h")) %>%
select(gene_ID_NCBI = ID,
GammaP) %>%
collect() %>%
# mutate(my_col_name = GammaP*2) %>% you can do cool stuff with mutate
mutate(rhythmic_24h) = ifelse(GammaP < 0.05, "yes", "no")) %>%
select(-GammaP) %>%
left_join(gene.IDs, by = c('gene_ID_NCBI' = "attributes_ncbi")) %>%
select(-c(start,end)) %>%
head
#
# Choose species
species <- 'beau'
# rhytmic <-
my.db %>%
tbl(glue("{species}_zscores_{period}h")) %>%
select(gene_ID_NCBI = ID,
GammaP) %>%
collect() %>%
# mutate(my_col_name = GammaP*2) %>% you can do cool stuff with mutate
mutate(rhythmic_24h) = ifelse(GammaP < 0.05, "yes", "no")) %>%
select(-GammaP) %>%
left_join(gene.IDs, by = c('gene_ID_NCBI' = "attributes_ncbi")) %>%
select(-c(start,end)) %>%
head
# rhytmic <-
my.db %>%
tbl(glue("beau_zscores_{period}h")) %>%
select(gene_ID_NCBI = ID,
GammaP) %>%
collect() %>%
# mutate(my_col_name = GammaP*2) %>% you can do cool stuff with mutate
mutate(rhythmic_24h) = ifelse(GammaP < 0.05, "yes", "no")) %>%
select(-GammaP) %>%
left_join(gene.IDs, by = c('gene_ID_NCBI' = "attributes_ncbi")) %>%
select(-c(start,end)) %>%
head
# rhytmic <-
my.db %>%
tbl(glue("beau_zscores_{period}h")) %>%
select(gene_ID_NCBI = ID,
GammaP) %>%
collect() %>%
head
# rhytmic <-
my.db %>%
tbl(glue("beau_zscores_{period}h")) %>%
select(gene_ID_NCBI = ID,
GammaP) %>%
collect() %>%
# mutate(my_col_name = GammaP*2) %>% you can do cool stuff with mutate
mutate(rhythmic_24h = ifelse(GammaP < 0.05, "yes", "no")) %>%
head()
# rhytmic <-
my.db %>%
tbl(glue("beau_zscores_{period}h")) %>%
select(gene_ID_NCBI = ID,
GammaP) %>%
collect() %>%
# mutate(my_col_name = GammaP*2) %>% you can do cool stuff with mutate
mutate(glue("rhythmic_{period}h") = ifelse(GammaP < 0.05, "yes", "no")) %>%
head()
glue("rhythmic_{period}h")
# rhytmic <-
my.db %>%
tbl(glue("beau_zscores_{period}h")) %>%
select(gene_ID_NCBI = ID,
GammaP) %>%
collect() %>%
# mutate(my_col_name = GammaP*2) %>% you can do cool stuff with mutate
mutate(paste0("rhythmic_",period,"h") = ifelse(GammaP < 0.05, "yes", "no")) %>%
head()
# rhytmic <-
my.db %>%
tbl(glue("beau_zscores_{period}h")) %>%
select(gene_ID_NCBI = ID,
GammaP) %>%
collect() %>%
# mutate(my_col_name = GammaP*2) %>% you can do cool stuff with mutate
mutate(paste0(rhythmic) = ifelse(GammaP < 0.05, "yes", "no")) %>%
head()
# rhytmic <-
my.db %>%
tbl(glue("beau_zscores_{period}h")) %>%
select(gene_ID_NCBI = ID,
GammaP) %>%
collect() %>%
# mutate(my_col_name = GammaP*2) %>% you can do cool stuff with mutate
mutate(rhythmic = ifelse(GammaP < 0.05, "yes", "no")) %>%
head()
# Make the table
# For 24h rhythmic genes
col_name <- glue('rhythmic_{period}h')
# rhytmic <-
my.db %>%
tbl(glue("beau_zscores_{period}h")) %>%
select(gene_ID_NCBI = ID,
GammaP) %>%
collect() %>%
# mutate(my_col_name = GammaP*2) %>% you can do cool stuff with mutate
mutate(col_name = ifelse(GammaP < 0.05, "yes", "no")) %>%
head()
# rhytmic <-
my.db %>%
tbl(glue("beau_zscores_{period}h")) %>%
select(gene_ID_NCBI = ID,
GammaP) %>%
collect() %>%
# mutate(my_col_name = GammaP*2) %>% you can do cool stuff with mutate
mutate(rhythmic = ifelse(GammaP < 0.05, "yes", "no")) %>%
select(-GammaP) %>%
left_join(gene.IDs, by = c('gene_ID_NCBI' = "attributes_ncbi")) %>%
select(-c(start,end)) %>%
head
rhytmic <-
my.db %>%
tbl(glue("beau_zscores_{period}h")) %>%
select(gene_ID_NCBI = ID,
GammaP) %>%
collect() %>%
# mutate(my_col_name = GammaP*2) %>% you can do cool stuff with mutate
mutate(rhythmic = ifelse(GammaP < 0.05, "yes", "no")) %>%
select(-GammaP) %>%
left_join(gene.IDs, by = c('gene_ID_NCBI' = "attributes_ncbi")) %>%
select(-c(start,end))
# Make the table in the database
dbWriteTable(my.db, name, rhytmic)
src_dbi(my.db)
# Rhytmic or not ----------------------------------------------------------
# tbl(my.db, “tbl_name”) %>% collect() %>% view() for viewing table
#
### Write table with all the gene ID's in it and say if it is rhytmic or not
period <- '12'
# path to file with all the gene IDs
csv.name <- paste0('./data/input/', species, '/', species, '_gene_names_robin_ncbi.csv')
# name of the new table in the database
name <- glue('{species}_rhytmic_genes_{period}h')
# read in the gene IDs
gene.IDs <- read.csv(csv.name, sep= ',', header = TRUE, stringsAsFactors = FALSE)
rhytmic <-
my.db %>%
tbl(glue("beau_zscores_{period}h")) %>%
select(gene_ID_NCBI = ID,
GammaP) %>%
collect() %>%
# mutate(my_col_name = GammaP*2) %>% you can do cool stuff with mutate
mutate(rhythmic = ifelse(GammaP < 0.05, "yes", "no")) %>%
select(-GammaP) %>%
left_join(gene.IDs, by = c('gene_ID_NCBI' = "attributes_ncbi")) %>%
select(-c(start,end))
# Make the table in the database
dbWriteTable(my.db, name, rhytmic)
#
# Choose species
species <- 'ophio_cflo'
# Rhytmic or not ----------------------------------------------------------
# tbl(my.db, “tbl_name”) %>% collect() %>% view() for viewing table
#
### Write table with all the gene ID's in it and say if it is rhytmic or not
period <- '12'
# path to file with all the gene IDs
csv.name <- paste0('./data/input/', species, '/', species, '_gene_names_robin_ncbi.csv')
# name of the new table in the database
name <- glue('{species}_rhytmic_genes_{period}h')
# read in the gene IDs
gene.IDs <- read.csv(csv.name, sep= ',', header = TRUE, stringsAsFactors = FALSE)
rhytmic <-
my.db %>%
tbl(glue("{species}_zscores_{period}h")) %>%
select(gene_ID_NCBI = ID,
GammaP) %>%
collect() %>%
# mutate(my_col_name = GammaP*2) %>% you can do cool stuff with mutate
mutate(rhythmic = ifelse(GammaP < 0.05, "yes", "no")) %>%
select(-GammaP) %>%
left_join(gene.IDs, by = c('gene_ID_NCBI' = "attributes_ncbi")) %>%
select(-c(start,end))
# Make the table in the database
dbWriteTable(my.db, name, rhytmic)
# Rhytmic or not ----------------------------------------------------------
# tbl(my.db, “tbl_name”) %>% collect() %>% view() for viewing table
#
### Write table with all the gene ID's in it and say if it is rhytmic or not
period <- '24'
# path to file with all the gene IDs
csv.name <- paste0('./data/input/', species, '/', species, '_gene_names_robin_ncbi.csv')
# name of the new table in the database
name <- glue('{species}_rhytmic_genes_{period}h')
# read in the gene IDs
gene.IDs <- read.csv(csv.name, sep= ',', header = TRUE, stringsAsFactors = FALSE)
rhytmic <-
my.db %>%
tbl(glue("{species}_zscores_{period}h")) %>%
select(gene_ID_NCBI = ID,
GammaP) %>%
collect() %>%
# mutate(my_col_name = GammaP*2) %>% you can do cool stuff with mutate
mutate(rhythmic = ifelse(GammaP < 0.05, "yes", "no")) %>%
select(-GammaP) %>%
left_join(gene.IDs, by = c('gene_ID_NCBI' = "attributes_ncbi")) %>%
select(-c(start,end))
# Make the table in the database
dbWriteTable(my.db, name, rhytmic)
src_dbi(my.db)
dbReadTable(my.db, 'beau_rhytmic_genes_12h')
src_dbi(my.db)
dbRemoveTable(my.db, 'beau_rhytmic_genes_12h')
dbRemoveTable(my.db, 'beau_rhytmic_genes_24h')
dbRemoveTable(my.db, 'ophio_cflo_rhytmic_genes_24h')
dbRemoveTable(my.db, 'ophio_cflo_rhytmic_genes_12h')
src_dbi(my.db)
# Rhytmic or not ----------------------------------------------------------
# tbl(my.db, “tbl_name”) %>% collect() %>% view() for viewing table
#
### Write table with all the gene ID's in it and say if it is rhytmic or not
period <- '24'
# path to file with all the gene IDs
csv.name <- paste0('./data/input/', species, '/', species, '_gene_names_robin_ncbi.csv')
# name of the new table in the database
name <- glue('{species}_rhythmic_genes_{period}h')
# read in the gene IDs
gene.IDs <- read.csv(csv.name, sep= ',', header = TRUE, stringsAsFactors = FALSE)
rhytmic <-
my.db %>%
tbl(glue("{species}_zscores_{period}h")) %>%
select(gene_ID_NCBI = ID,
GammaP) %>%
collect() %>%
# mutate(my_col_name = GammaP*2) %>% you can do cool stuff with mutate
mutate(rhythmic = ifelse(GammaP < 0.05, "yes", "no")) %>%
select(-GammaP) %>%
left_join(gene.IDs, by = c('gene_ID_NCBI' = "attributes_ncbi")) %>%
select(-c(start,end))
# Make the table in the database
dbWriteTable(my.db, name, rhytmic)
# Rhytmic or not ----------------------------------------------------------
# tbl(my.db, “tbl_name”) %>% collect() %>% view() for viewing table
#
### Write table with all the gene ID's in it and say if it is rhytmic or not
period <- '12'
# path to file with all the gene IDs
csv.name <- paste0('./data/input/', species, '/', species, '_gene_names_robin_ncbi.csv')
# name of the new table in the database
name <- glue('{species}_rhythmic_genes_{period}h')
# read in the gene IDs
gene.IDs <- read.csv(csv.name, sep= ',', header = TRUE, stringsAsFactors = FALSE)
rhytmic <-
my.db %>%
tbl(glue("{species}_zscores_{period}h")) %>%
select(gene_ID_NCBI = ID,
GammaP) %>%
collect() %>%
# mutate(my_col_name = GammaP*2) %>% you can do cool stuff with mutate
mutate(rhythmic = ifelse(GammaP < 0.05, "yes", "no")) %>%
select(-GammaP) %>%
left_join(gene.IDs, by = c('gene_ID_NCBI' = "attributes_ncbi")) %>%
select(-c(start,end))
# Make the table in the database
dbWriteTable(my.db, name, rhytmic)
#
# Choose species
species <- 'beau'
# Rhytmic or not ----------------------------------------------------------
# tbl(my.db, “tbl_name”) %>% collect() %>% view() for viewing table
#
### Write table with all the gene ID's in it and say if it is rhytmic or not
period <- '12'
# path to file with all the gene IDs
csv.name <- paste0('./data/input/', species, '/', species, '_gene_names_robin_ncbi.csv')
# name of the new table in the database
name <- glue('{species}_rhythmic_genes_{period}h')
# read in the gene IDs
gene.IDs <- read.csv(csv.name, sep= ',', header = TRUE, stringsAsFactors = FALSE)
rhytmic <-
my.db %>%
tbl(glue("{species}_zscores_{period}h")) %>%
select(gene_ID_NCBI = ID,
GammaP) %>%
collect() %>%
# mutate(my_col_name = GammaP*2) %>% you can do cool stuff with mutate
mutate(rhythmic = ifelse(GammaP < 0.05, "yes", "no")) %>%
select(-GammaP) %>%
left_join(gene.IDs, by = c('gene_ID_NCBI' = "attributes_ncbi")) %>%
select(-c(start,end))
# Make the table in the database
dbWriteTable(my.db, name, rhytmic)
# Rhytmic or not ----------------------------------------------------------
# tbl(my.db, “tbl_name”) %>% collect() %>% view() for viewing table
#
### Write table with all the gene ID's in it and say if it is rhytmic or not
period <- '24'
# path to file with all the gene IDs
csv.name <- paste0('./data/input/', species, '/', species, '_gene_names_robin_ncbi.csv')
# name of the new table in the database
name <- glue('{species}_rhythmic_genes_{period}h')
# read in the gene IDs
gene.IDs <- read.csv(csv.name, sep= ',', header = TRUE, stringsAsFactors = FALSE)
rhytmic <-
my.db %>%
tbl(glue("{species}_zscores_{period}h")) %>%
select(gene_ID_NCBI = ID,
GammaP) %>%
collect() %>%
# mutate(my_col_name = GammaP*2) %>% you can do cool stuff with mutate
mutate(rhythmic = ifelse(GammaP < 0.05, "yes", "no")) %>%
select(-GammaP) %>%
left_join(gene.IDs, by = c('gene_ID_NCBI' = "attributes_ncbi")) %>%
select(-c(start,end))
# Make the table in the database
dbWriteTable(my.db, name, rhytmic)
src_dbi(my.db)
