select(gene_name=gene,
ZT02 = value_2) %>%
head()
foo = read.csv(file = paste0(path_to_data,data_all[1]),
header = T, sep = "\t") %>%
select(gene_name=gene,
value_2)
names(foo)[2]
str_extract(data_all[1])
str_extract(data_all[1], "\\d")
str_extract(data_all[1], "\d")
str_extract(data_all[1], "\\d+")
str_extract(data_all[1], "\\d++")
str_extract(data_all[1], "\\d+[A-Z]")
names(foo)[2] <- paste0("ZT",str_extract(data_all[1], "\\d+[A-Z]"))
foo %>% head()
class(foo)
foo <- data.frame()
foo <- data.frame()
for (i in length(data_all)) {
if (i == 1) {
foo = read.csv(file = paste0(path_to_data,data_all[i]), header = T, sep = "\t") %>%
select(gene_name=gene, value_2)
names(foo)[2] <- paste0("ZT",str_extract(data_all[i], "\\d+[A-Z]"))
}
else {
bar = read.csv(file = paste0(path_to_data,data_all[i]), header = T, sep = "\t") %>%
select(gene_name=gene, value_2)
names(bar)[2] <- paste0("ZT",str_extract(data_all[i], "\\d+[A-Z]"))
foo <- foo %>%
left_join(bar, by="gene_name")
}
}
foo %>% head()
i
rm(foo)
foo <- data.frame()
for (i in 1:length(data_all)) {
if (i == 1) {
foo = read.csv(file = paste0(path_to_data,data_all[i]), header = T, sep = "\t") %>%
select(gene_name=gene, value_2)
names(foo)[2] <- paste0("ZT",str_extract(data_all[i], "\\d+[A-Z]"))
}
else {
bar = read.csv(file = paste0(path_to_data,data_all[i]), header = T, sep = "\t") %>%
select(gene_name=gene, value_2)
names(bar)[2] <- paste0("ZT",str_extract(data_all[i], "\\d+[A-Z]"))
foo <- foo %>%
left_join(bar, by="gene_name")
}
}
foo %>% head()
paste0("ZT",str_extract(data_all[i], "\\d+[A-Z]"))
i
data_all
paste0("ZT",str_extract(data_all[i], "\\b+[A-Z]"))
paste0("ZT",str_extract(data_all[i], "\\d+[A-Z]"))
paste0("ZT",str_extract(data_all[i], "\\\\d+[A-Z]"))
paste0("ZT",str_extract(data_all[i], "\d+[A-Z]"))
paste0("ZT",str_extract(data_all[i], "\\d+[A-Z]"))
paste0("ZT",str_extract(data_all[i], "\\b[a-z]+\\b"))
paste0("ZT",str_extract(data_all[i], "\\b[a-z]+"))
paste0("ZT",str_extract(data_all[i], "\\b[a-z]+\\d"))
paste0("ZT",str_extract(data_all[i], "\\b[a-z]+\\b"))
paste0("ZT",str_extract(data_all[i], "\\b+\\b"))
str_extract(data_all[i], "\\d+[A-Z]")
str_split(data_all[i], "_")
str_split(data_all[i], "_", 3)
str_split_n(data_all[i], "_", 3)
stringr::str_split_n(data_all[i], "_", 3)
str_split(data_all[i], "_")
str_split(data_all[i], "_")[[3]]
str_split(data_all[i], "_")[3]
str_split(data_all[i], "_")[1][3]
str_split(data_all[i], "_") %>% pluck()
str_split(data_all[i], "_")[[1]][3]
str_split(data_all[i], "_")[[1]][5] %>% str_split(".")
str_split(data_all[i], "_")[[1]][5]
str_split(str_split(data_all[i], "_")[[1]][5], ".")
str_split(str_split(data_all[i], "_")[[1]][5], "\.")
str_split(str_split(data_all[i], "_")[[1]][5], "/.")
str_split(str_split(data_all[i], "_")[[1]][5], ".txt")
str_split(str_split(data_all[i], "_")[[1]][5], ".txt")[[1]][1]
str_split(str_split(data_all[5], "_")[[1]][5], ".txt")[[1]][1]
str_split(str_split(data_all[3], "_")[[1]][5], ".txt")[[1]][1]
foo <- data.frame()
for (i in 1:length(data_all)) {
if (i == 1) {
foo = read.csv(file = paste0(path_to_data,data_all[i]), header = T, sep = "\t") %>%
select(gene_name=gene, value_2)
names(foo)[2] <- paste0("ZT",
str_split(str_split(data_all[i], "_")[[1]][5], ".txt")[[1]][1])
}
else {
bar = read.csv(file = paste0(path_to_data,data_all[i]), header = T, sep = "\t") %>%
select(gene_name=gene, value_2)
names(bar)[2] <- paste0("ZT",
str_split(str_split(data_all[i], "_")[[1]][5], ".txt")[[1]][1])
foo <- foo %>%
left_join(bar, by="gene_name")
}
}
foo %>% head()
?write.csv
path_to_data
# Save the compiled dataframe "foo"
write.csv(foo,
file = paste0(path_to_data,"normalized_gene_exp_ophio_cflo_all_samples.csv"),
row.names = F)
foo %>% head()
# Absolute path to the data
path_to_data = "/Users/biplabendudas/Documents/GitHub/Das_et_al_2022a/results/normalized_gene_exp/ophio_kim/"
# load libraries
library(data.table)
library(tidyverse)
# list all the normalized_gene_exp files (n = 12; Ophio_cflo)
data_all=list.files(path = path_to_data,
pattern='*.txt')
# Absolute path to the data
path_to_data = "/Users/biplabendudas/Documents/GitHub/Das_et_al_2022a/results/normalized_gene_exp/ophio_kim/ld/"
# load libraries
library(data.table)
library(tidyverse)
# list all the normalized_gene_exp files (n = 12; Ophio_cflo)
data_all=list.files(path = path_to_data,
pattern='*.txt')
i
data_all[i]
str_split(str_split(data_all[i], "_")[[1]][5], ".txt")[[1]][1])
str_split(data_all[i], "_")[[1]][5]
str_split(data_all[i], "_")[[1]]
str_split(data_all[i], "_")[[1]][c(6,7)]
paste0(str_split(data_all[i], "_")[[1]][c(6,7)])
str_split(data_all[i], "_")[[1]][6]
str_split(data_all[i], "_")[[1]][7]
str_split(str_split(data_all[i], "_")[[1]][7], ".txt")[[1]][1])
str_split(str_split(data_all[i], "_")[[1]][7], ".txt")[[1]][1]
paste0("ZT",
str_split(str_split(data_all[i], "_")[[1]][7], ".txt")[[1]][1],
"ld")
# Absolute path to the data
path_to_data = "/Users/biplabendudas/Documents/GitHub/Das_et_al_2022a/results/normalized_gene_exp/ophio_kim/ld/"
# load libraries
library(data.table)
library(tidyverse)
# list all the normalized_gene_exp files (n = 12; Ophio_cflo)
data_all=list.files(path = path_to_data,
pattern='*.txt')
data_all
str_split(data_all[i], "_")[[1]][6]
foo <- data.frame()
for (i in 1:length(data_all)) {
if (i == 1) {
foo = read.csv(file = paste0(path_to_data,data_all[i]), header = T, sep = "\t") %>%
select(gene_name=gene, value_2)
names(foo)[2] <- paste0("ZT",
# extract the second sample's timepoint
str_split(str_split(data_all[i], "_")[[1]][7], ".txt")[[1]][1],
# extract the experiment's light regime
str_split(data_all[i], "_")[[1]][6])
}
else {
bar = read.csv(file = paste0(path_to_data,data_all[i]), header = T, sep = "\t") %>%
select(gene_name=gene, value_2)
names(bar)[2] <- paste0("ZT",
str_split(str_split(data_all[i], "_")[[1]][7], ".txt")[[1]][1],
str_split(data_all[i], "_")[[1]][6])
foo <- foo %>%
left_join(bar, by="gene_name")
}
}
foo %>% head()
# Save the compiled dataframe "foo"
write.csv(foo,
file = paste0(path_to_data,"normalized_gene_exp_ophio_kim_ld_samples.csv"),
row.names = F)
# Absolute path to the data
path_to_data = "/Users/biplabendudas/Documents/GitHub/Das_et_al_2022a/results/normalized_gene_exp/ophio_kim/dd/"
# load libraries
library(data.table)
library(tidyverse)
# list all the normalized_gene_exp files (n = 12; Ophio_cflo)
data_all=list.files(path = path_to_data,
pattern='*.txt')
data_all
foo <- data.frame()
for (i in 1:length(data_all)) {
if (i == 1) {
foo = read.csv(file = paste0(path_to_data,data_all[i]), header = T, sep = "\t") %>%
select(gene_name=gene, value_2)
names(foo)[2] <- paste0("ZT",
# extract the second sample's timepoint
str_split(str_split(data_all[i], "_")[[1]][7], ".txt")[[1]][1],
# extract the experiment's light regime
str_split(data_all[i], "_")[[1]][6])
}
else {
bar = read.csv(file = paste0(path_to_data,data_all[i]), header = T, sep = "\t") %>%
select(gene_name=gene, value_2)
names(bar)[2] <- paste0("ZT",
str_split(str_split(data_all[i], "_")[[1]][7], ".txt")[[1]][1],
str_split(data_all[i], "_")[[1]][6])
foo <- foo %>%
left_join(bar, by="gene_name")
}
}
foo %>% head()
# Save the compiled dataframe "foo"
write.csv(foo,
file = paste0(path_to_data,"normalized_gene_exp_ophio_kim_dd_samples.csv"),
row.names = F)
rm(list=ls())
ophio_kim_gff_robin <- read.csv("./../../scripts/mapping_normalizing_reads/roos_billuTC6/ophio_kim_deBekker2017/getting_ophio_kim_data/files_from_Robin/Ophio5.gene_features.gff3.csv",
header = T, stringsAsFactors = F)
ophio_kim_gff_ncbi <- read.csv("./../../scripts/mapping_normalizing_reads/roos_billuTC6/ophio_kim_deBekker2017/getting_ophio_kim_data/files_from_NCBI/GCA_001272575.2_ASM127257v2_genomic.gff.csv",
header = T, stringsAsFactors = F)
# load libraries
library(tidyverse)
ophio_kim_gff_robin <- ophio_kim_gff_robin %>%
filter(feature == "gene")
ophio_kim_gff_ncbi <- ophio_kim_gff_ncbi %>%
filter(feature == "gene")
ophio_kim_gff_robin <- ophio_kim_gff_robin %>%
filter(feature == "gene") %>%
select(feature, start, end, attributes_robin = attributes)
ophio_kim_gff_ncbi <- ophio_kim_gff_ncbi %>%
filter(feature == "gene") %>%
select(feature, start, end, attributes_ncbi = attributes)
head(ophio_kim_gff_robin)
head(ophio_kim_gff_robin)
head(ophio_kim_gff_ncbi)
ophio_kim_gff_robin <- ophio_kim_gff_robin %>%
filter(feature == "gene") %>%
select(start, end, attributes_robin = attributes)
ophio_kim_gff_robin <- read.csv("./../../scripts/mapping_normalizing_reads/roos_billuTC6/ophio_kim_deBekker2017/getting_ophio_kim_data/files_from_Robin/Ophio5.gene_features.gff3.csv",
header = T, stringsAsFactors = F)
ophio_kim_gff_ncbi <- read.csv("./../../scripts/mapping_normalizing_reads/roos_billuTC6/ophio_kim_deBekker2017/getting_ophio_kim_data/files_from_NCBI/GCA_001272575.2_ASM127257v2_genomic.gff.csv",
header = T, stringsAsFactors = F)
getwd()
ophio_kim_gff_robin <- read.csv("./../../scripts/mapping_normalizing_reads/roos_billuTC6/ophio_kim_deBekker2017/getting_ophio_kim_data/files_from_Robin/Ophio5.gene_features.gff3.csv",
header = T, stringsAsFactors = F)
ophio_kim_gff_robin <- read.csv("./../../scripts/mapping_normalizing_reads/roos_billuTC6/ophio_kim_deBekker2017/getting_ophio_kim_data/files_from_Robin/Ophio5.gene_features.gff3.csv",
header = T, stringsAsFactors = F)
ophio_kim_gff_ncbi <- read.csv("./../../scripts/mapping_normalizing_reads/roos_billuTC6/ophio_kim_deBekker2017/getting_ophio_kim_data/files_from_NCBI/GCA_001272575.2_ASM127257v2_genomic.gff.csv",
header = T, stringsAsFactors = F)
getwd()
ophio_kim_gff_robin <- read.csv("/Users/biplabendudas/Documents/GitHub/Das_et_al_2022a/scripts/mapping_normalizing_reads/roos_billuTC6/ophio_kim_deBekker2017/getting_ophio_kim_data/files_from_Robin/Ophio5.gene_features.gff3.csv",
header = T, stringsAsFactors = F)
ophio_kim_gff_ncbi <- read.csv("/Users/biplabendudas/Documents/GitHub/Das_et_al_2022a/scripts/mapping_normalizing_reads/roos_billuTC6/ophio_kim_deBekker2017/getting_ophio_kim_data/files_from_NCBI/GCA_001272575.2_ASM127257v2_genomic.gff.csv",
header = T, stringsAsFactors = F)
# load libraries
library(tidyverse)
ophio_kim_gff_robin <- ophio_kim_gff_robin %>%
filter(feature == "gene") %>%
select(start, end, attributes_robin = attributes)
ophio_kim_gff_ncbi <- ophio_kim_gff_ncbi %>%
filter(feature == "gene") %>%
select(start, end, attributes_ncbi = attributes)
head(ophio_kim_gff_robin)
head(ophio_kim_gff_ncbi)
ophio_kim_gff_robin %>%
pull(attributes_robin) %>%
head()
ophio_kim_gff_robin %>%
mutate(a = str_split(attributes_robin, "|"))
ophio_kim_gff_robin %>%
mutate(a = str_split(attributes_robin, "|", 1)) %>%
head()
ophio_kim_gff_robin %>%
mutate(a = str_split(attributes_robin, "=", 2)) %>%
head()
?str_split
ophio_kim_gff_robin %>%
mutate(a = str_split_fixed(attributes_robin, "=", 2)) %>%
head()
ophio_kim_gff_robin %>%
mutate(a = str_split_fixed(attributes_robin, "=", 3)) %>%
head()
ophio_kim_gff_robin %>%
mutate(a = str_split(attributes_robin, "=", 3)) %>%
head()
ophio_kim_gff_robin %>%
mutate(a = str_split(attributes_robin, "=")) %>%
head()
?separate
ophio_kim_gff_robin %>%
separate(attributes_robin, c("a","b"), "=", extra = "merge") %>%
head()
ophio_kim_gff_robin %>%
separate(attributes_robin, c("a","b"), "=", extra = "merge") %>%
separate(b, c("x","y"),"|gene", extra = "merge") %>%
head()
ophio_kim_gff_robin %>%
separate(attributes_robin, c("a","b"), "=", extra = "merge") %>%
separate(b, c("x","y"),"|", extra = "merge") %>%
head()
ophio_kim_gff_robin %>%
separate(attributes_robin, c("a","b"), "=", extra = "merge") %>%
separate(b, c("x","y"),"|") %>%
head()
ophio_kim_gff_robin %>%
separate(attributes_robin, c("a","b"), "=", extra = "merge") %>%
separate(b, c("x","y"),"|", extra = "merge") %>%
head()
ophio_kim_gff_robin %>%
separate(attributes_robin, c("a","b"), "=", extra = "merge") %>%
separate(b, c("x","y"),"|gene", extra = "merge") %>%
head()
ophio_kim_gff_robin %>%
separate(attributes_robin, c("a","b"), "=", extra = "merge") %>%
# str_split()
head()
ophio_kim_gff_robin %>%
separate(attributes_robin, c("a","b"), "=", extra = "merge") %>%
str_split(b, "|gene") %>%
head()
ophio_kim_gff_robin %>%
separate(attributes_robin, c("a","b"), "=", extra = "merge") %>%
# str_split(b, "|gene") %>%
head()
ophio_kim_gff_robin %>%
separate(attributes_robin, c("a","b"), "=", extra = "merge") %>%
str_split(b, "|g") %>%
head()
ophio_kim_gff_robin %>%
separate(attributes_robin, c("a","b"), "=", extra = "merge") %>%
str_split(b, c("x","y","Z"), "|") %>%
head()
ophio_kim_gff_robin %>%
separate(attributes_robin, c("a","b"), "=", extra = "merge") %>%
# str_split(b, c("x","y","Z"), "|") %>%
head()
ophio_kim_gff_robin %>%
separate(attributes_robin, c("a","b"), "=", extra = "merge") %>%
separate(b, c("x","y","Z"), "|") %>%
head()
ophio_kim_gff_robin %>%
separate(attributes_robin, c("a","b"), "=", extra = "merge") %>%
separate(b, c("x","y","Z"), "|", extra = "merge") %>%
head()
ophio_kim_gff_robin %>%
separate(attributes_robin, c("a","b"), "=", extra = "merge") %>%
separate(b, c("x","y"), "|", extra = "merge") %>%
head()
ophio_kim_gff_robin %>%
separate(attributes_robin, c("a","b"), "=", extra = "merge") %>%
separate(b, c("x","y"), "5|", extra = "merge") %>%
head()
ophio_kim_gff_robin %>%
separate(attributes_robin, c("a","b"), "=", extra = "merge") %>%
head()
ophio_kim_gff_robin %>%
separate(attributes_robin, c("a","b"), "=", extra = "merge") %>%
separate(b, c("b","c"), "|", extra = "merge") %>%
head()
ophio_kim_gff_robin %>%
separate(attributes_robin, c("a","b"), "=", extra = "merge") %>%
separate(b, c("b","c"), "|", extra = "merge") %>%
summary()
ophio_kim_gff_robin %>%
separate(attributes_robin, c("a","b"), "=", extra = "merge") %>%
separate(b, c("b","c"), "|", extra = "merge") %>%
glimpse()
ophio_kim_gff_robin %>%
separate(attributes_robin, c("a","b"), "=", extra = "merge") %>%
separate(b, c("b","c","d"), "|", extra = "merge") %>%
glimpse()
ophio_kim_gff_robin %>%
separate(attributes_robin, c("a","b"), "=", extra = "merge") %>%
separate(b, c("b","c","d"), "`|`", extra = "merge") %>%
glimpse()
ophio_kim_gff_robin %>%
separate(attributes_robin, c("a","b"), "=", extra = "merge") %>%
separate(b, c("b","c","d"), "|") %>%
glimpse()
foo <- ophio_kim_gff_robin %>%
separate(attributes_robin, c("a","b"), "=", extra = "merge")
foo %>%
head()
foo %>%
separate(b, c("b","c"), "|", extra = "merge") %>%
head()
foo %>%
separate(b, c("b","c"), sep="|", extra = "merge") %>%
head()
?str_split_fixed
foo %>%
str_split_fixed(b, "|", n=2)
foo %>%
str_split_fixed(b, "|", 2)
foo %>%
str_split_fixed(b, "|")
# foo %>%
str_split_fixed(foo$b, "|")
# foo %>%
str_split_fixed(foo$b, "|", n=2)
# foo %>%
str_split_fixed(foo$b, "|", n=2) %>%
head()
# foo %>%
str_split_fixed(foo$b, "|", n=1) %>%
head()
# foo %>%
str_split_fixed(foo$b, "|", n=3) %>%
head()
# foo %>%
str_split_fixed(foo$b, pattern = "|", n=3) %>%
head()
# foo %>%
str_split_fixed(foo$b, pattern = "|", n=5) %>%
head()
# foo %>%
str_split_fixed(foo$b, pattern = "\|", n=5) %>%
head()
# foo %>%
str_split_fixed(foo$b, pattern = "|", n=3) %>%
head()
# foo %>%
str_split_fixed(foo$b, pattern = "|", n=2) %>%
head()
foo %>% head()
strsplit(foo$b,"|") %>%
head()
strsplit(foo$b,"|gene") %>%
head()
strsplit(foo$b,"|gene",4) %>%
head()
strsplit(foo$b,"|gene",4) %>%
unlist() %>%
head()
foo %>%
strsplit(b,"|gene",4) %>%
unlist() %>%
head()
strsplit(b,"|gene",4) %>%
unlist() %>%
length()
strsplit(foo$b,"|gene",4) %>%
unlist() %>%
length()
strsplit(foo$b,"|gene",4) %>%
unlist() %>%
tail()
foo %>% tail()
ophio_kim_gff_robin$attributes_robin <- unlist(strsplit(foo$b,"|gene",4))
head(ophio_kim_gff_robin)
# initial split
ophio_kim_gff_ncbi %>%
head()
# initial split
ophio_kim_gff_ncbi %>%
separate(attributes_ncbi, c("a","b"), ";", extra = "merge") %>%
head()
# initial split
ophio_kim_gff_ncbi %>%
separate(attributes_ncbi, c("a","b","c"), ";", extra = "merge") %>%
head()
# initial split
ophio_kim_gff_ncbi %>%
separate(attributes_ncbi, c("a","b","c"), ";", extra = "merge") %>%
select(-c(a,c)) %>%
head()
# initial split
ophio_kim_gff_ncbi %>%
separate(attributes_ncbi, c("a","b","c"), ";", extra = "merge") %>%
select(-c(a,c)) %>%
separate(b, c("b","c"), "=", extra = "merge") %>%
head()
# initial split
ophio_kim_gff_ncbi %>%
separate(attributes_ncbi, c("a","b","c"), ";", extra = "merge") %>%
select(-c(a,c)) %>%
separate(b, c("b","c"), "=", extra = "merge") %>%
select(-b) %>%
mutate(attributes_ncbi=c) %>%
head()
# initial split
ophio_kim_gff_ncbi %>%
separate(attributes_ncbi, c("a","b","c"), ";", extra = "merge") %>%
select(-c(a,c)) %>%
separate(b, c("b","c"), "=", extra = "merge") %>%
select(start, end, attributes_ncbi=c) %>%
head()
# initial split
ophio_kim_gff_ncbi %>%
separate(attributes_ncbi, c("a","b","c"), ";", extra = "merge") %>%
select(-c(a,c)) %>%
separate(b, c("b","c"), "=", extra = "merge") %>%
select(start, end, attributes_ncbi=c) %>%
head()
# all-in-one
ophio_kim_gff_ncbi <-
ophio_kim_gff_ncbi %>%
separate(attributes_ncbi, c("a","b","c"), ";", extra = "merge") %>%
select(-c(a,c)) %>%
separate(b, c("b","c"), "=", extra = "merge") %>%
select(start, end, attributes_ncbi=c)
ophio_kim_gff_ncbi %>% str()
?full_join
ophio_kim_gff_robin %>%
full_join(ophio_kim_gff_ncbi) %>%
head()
ophio_kim_gff_robin %>%
full_join(ophio_kim_gff_ncbi) %>%
tail()
ophio_kim_gff_robin_ncbi <-
ophio_kim_gff_robin %>%
full_join(ophio_kim_gff_ncbi)
# SAVE THE FILE
write.csv(ophio_kim_gff_robin_ncbi,
file = "/Users/biplabendudas/Documents/GitHub/Das_et_al_2022a/results/normalized_gene_exp/ophio_kim/ophio_kim_gene_names_robin_ncbi.csv",
row.names = F)
